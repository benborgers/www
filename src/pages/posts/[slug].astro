---
import Layout from '../../layouts/Layout.astro'
import Prose from '../../components/Prose.astro'
import { Code } from 'astro/components'
import ghost from '../../lib/ghost'

export async function getStaticPaths() {
  const posts = Astro.fetchContent('../../../posts/*.md')

  const localPosts = posts
    .map(post => {
      const slug = post.file.pathname
        .replace('/posts/', '')
        .replace('.md', '')

      return {
        params: { slug },
        props: {
          type: 'file',
          post: {
            title: post.title,
            date: post.date,
            html: post.content.html
          }
        }
      }
    })

  const ghostPosts = (await ghost('posts')).posts
    .map(post => {
      return {
        params: { slug: post.slug },
        props: {
          type: 'ghost',
          post: {
            title: post.title,
            date: post.published_at,
            html: post.html
          }
        }
      }
    })

  return [...localPosts, ...ghostPosts]
}

const { type, post } = Astro.props
---

<Layout title={post.title}>
  <a href="/posts" class="block max-w-max sm:mt-4 text-rose-600 font-bold text-sm">
    &larr; benborgers.com/posts
  </a>

  <div class="mt-12 sm:mt-24"></div>

  <div class="space-y-1 sm:space-y-2">
    <h1 class="text-3xl sm:text-4xl text-neutral-900 font-extrabold">{post.title}</h1>
    <p class="text-neutral-500 font-medium">{
      new Date(post.date).toLocaleString("en-US", {
        timeZone: "UTC",
        month: "long",
        day: "numeric",
        year: "numeric",
      })
    }</p>
  </div>

  <div class="mt-8" />

  <Prose>
    {type === 'file' && (
      <link rel="stylesheet" href="https://unpkg.com/prism-themes@1.9.0/themes/prism-dracula.min.css" />

      <Fragment set:html={post.html} />
    )}

    {type === 'ghost' && (() => {
      const pieces = post.html.split(/<\/?pre>/)

      return pieces.map(piece => {
        if (piece.startsWith('<code')) {
          const language = piece.match(/class="language-(.+?)"/)[1]
          const code = piece.match(/<code .*>(.+?)<\/code>/s)[1]
            .replace(/&lt;/g, '<')
            .replace(/&gt;/g, '>')

          return <Code code={code} lang={language} theme="dracula" />
        }

        return <Fragment set:html={piece} />
      })
    })}
  </Prose>
</Layout>
