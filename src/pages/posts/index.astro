---
import Layout from '../../layouts/Layout.astro'
import ghost from '../../lib/ghost'
const markdownFiles = Astro.fetchContent('../../../posts/*.md')

const localPosts = markdownFiles.map(post => {
  return {
    title: post.title,
    date: post.date,
    slug: post.file.pathname.replace('/posts/', '').replace('.md', '')
  }
})

const ghostPosts = (await ghost('posts')).posts.map(post => {
  return {
    title: post.title,
    date: post.published_at,
    slug: post.slug
  }
})

const posts = [...localPosts, ...ghostPosts]
  .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())

const getYearMonth = dateString => {
  if (!dateString) return null
  const date = new Date(dateString)
  return `${date.getFullYear()}-${date.getMonth() + 1}`
}
---

<Layout title="Ben Borgersâ€™ Blog">
  <div>
    {posts.map((post, index) => {
      const prevPost = posts[index - 1]
      const thisPostYearMonth = getYearMonth(post.date)
      const prevPostYearMonth = getYearMonth(prevPost?.date)
      const addMonthHeader = thisPostYearMonth !== prevPostYearMonth

      return (
        <Fragment>
          {addMonthHeader && (
            <h2 class="mt-8 text-lg sm:text-xl text-gray-800 font-bold">
              {new Date(post.date).toLocaleString('en-US', { month: 'long', year: 'numeric'})}
            </h2>
          )}

          <a
            href={`/posts/${post.slug}`}
            class="block max-w-max ml-4 mt-2 sm:text-lg text-gray-800 underline decoration-gray-400"
          >
            {post.title}
          </a>
        </Fragment>
      )
    })}
  </div>
</Layout>
