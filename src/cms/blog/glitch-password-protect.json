{
  "published": false,
  "date": "2020-09-30T02:17:21.344Z",
  "title": "How to password protect your Glitch site",
  "slug": "glitch-password-protect",
  "body": "You can password protect a Glitch site if you're writing Node.js (which means you've got a `package.json` file). \n\nWe're going to be using `express`, the default Node.js server framework that new Glitch projects use. We're also going to be using a technique called **Basic authentication**, which is built into every browser. \n\nThis is what it'll look like: \n\nLet's say we want to password-protect this secret admin route: \n\n```javascript\nconst express = require('express')\nconst app = express()\n\napp.get('/admin', (req, res) => {\n  res.send('Top secret stuff here')\n})\n```\n\nFirst, we're going to write a function called `reject()`, that we use when someone doesn't have the right password (or any password). \n\n```javascript\napp.get('/admin', (req, res) => {\n  const reject = () => {\n    // Telling the browser to use Basic authentication\n    res.setHeader('www-authenticate', 'Basic')\n    res.sendStatus(401) // the code 401 means Unauthorized\n  }\n\n  res.send('Top secret stuff here')\n})\n```"
}