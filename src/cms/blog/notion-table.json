{
  "published": true,
  "date": "2020-04-19T00:00:00.000Z",
  "slug": "notion-table",
  "title": "API to read a Notion table",
  "description": "Notion doesn't have a public API yet, but I reverse-engineered Notion's API for reading the contents of a table and made it into an open source project. You can use the API to read the rows/entries in any publicly accessible Notion table. ",
  "body": "I wrote my own reverse-engineered API for Notion, called Potion. The code is open source on [GitHub](https://github.com/benborgers/potion). \n\nToday, we're going to use that API to read a table in Notion. \n\n## Getting the table ID\n\nTo use the API, we need the ID of the table in Notion that we want to read. \n\nFirst, make the table public using the **Share** button in the top right corner: \n\n![](/assets/notion-public-access.png)\n\nThen, click the **Copy page link** button and paste the link somewhere. The long string of characters in the link (but not after the `?`) is the Notion document ID: \n\n![](/assets/notion-table-id.png)\n\n*The ID in this example is `2364751436224832ba85e279417ea798`.* \n\nYou'll need to give this ID to the API in order to tell it which table to read from. \n\n## Using the Potion API\n\nNow, we'll use [Potion](https://potion-api.now.sh) to read the table. \n\nThe endpoint we want to send a GET request to is: \n\n```\nhttps://potion-api.now.sh/table?id=NOTION_DOCUMENT_ID\n```\n\nYou can click [here](https://potion-api.now.sh/table?id=2364751436224832ba85e279417ea798) and see what the response would look like with the example ID we copied earlier, which is the ID for [this table](https://notion.so/2364751436224832ba85e279417ea798). \n\nHere's an example for javascript using `fetch`, which is built in to the browser: \n\n```jsx\nfetch(\"https://potion-api.now.sh/table?id=2364751436224832ba85e279417ea798\")\n  .then(res => res.json())\n  .then(json => {\n    console.log(json)\n  })\n```\n\nFrom here, you can use the data however you'd like. Feel free to use it to populate a website, read data for running a daily script, etc. This opens up a ton of new possibilities!"
}