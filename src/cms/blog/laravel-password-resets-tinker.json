{
  "published": true,
  "date": "2020-08-01T00:00:00.000Z",
  "title": "How to manually generate Laravel password resets",
  "slug": "laravel-password-resets-tinker",
  "description": "Instead of sending password resets via email, you can generate one whenever you'd like using Laravel Tinker on the command line and send it manually. ",
  "body": "Instead of sending password resets via email, you can also generate one whenever you'd like using Laravel Tinker on the command line (even in production) and send it manually. \n\nFirst, run `php artisan tinker` to open up Laravel Tinker. Then, use this command to generate a password reset token for the `User` with ID `1`. \n\n```php\napp('auth.password.broker')->createToken(App\\User::find(1))\n```\n\nThis returns a token and adds it (hashed) to the `password_resets` table of your database. \n\nTo use it, use this path: \n\n```\n/password/reset/{token}?email={user_email_address}\n```\n\nTo get this working in production on Laravel Vapor, I ran this command: \n\n```bash\nphp artisan tinker --execute \"error_log(app('auth.password.broker')->createToken(App\\User::find(1)))\"\n```\n\nThe command wasn't actually returning the token in production until I wrapped it with `error_log`."
}