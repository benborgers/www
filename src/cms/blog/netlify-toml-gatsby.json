{
  "published": true,
  "date": "2019-12-18T00:00:00.000Z",
  "title": "How to set up netlify.toml for Gatsby",
  "slug": "netlify-toml-gatsby",
  "description": "A guide to setting up a basic netlify.toml configuration to deploy your Gatsby site to Netlify, and for using Netlify Dev with Gatsby.",
  "body": "Netlify's configuration file, `[netlify.toml](https://docs.netlify.com/configure-builds/file-based-configuration/)`, allows you to define various settings for how your site will be deployed on Netlify.\n\nA basic `netlify.toml` file (placed at the root directory of your project) for a Gatsby site looks like this:\n\n```toml\n[build]\n\tcommand = \"gatsby build\"\n\tpublish = \"public\"\n[dev]\n\tcommand = \"gatsby develop\"\n```\n\nThe first `[build]` block tells Netlify that they should run `gatsby build` on their servers whenever you publish a new version of the site, and then publish whatever Gatsby puts in the `public` folder.\n\nThe second `[dev]` block tells Netlify that it should run `gatsby develop` whenever you run `netlify dev` on the command line to develop locally. Why use `netlify dev` instead of `gatsby develop`, the normal way of starting Gatsby's development server? Running Gatsby's command through [Netlify Dev](https://www.netlify.com/products/dev/) allows you to emulate the final Netlify site more closely. This includes:\n\n- Pulling in environment variables defined in your Netlify site dashboard\n- Performing Netlify redirects you've defined\n- Compiling and locally running Netlify Functions\n\nThere's a lot more you can configure in your `netlify.toml` file, such as environment variables, redirects, headers, and image compression. More information is in [Netlify's documentation](https://docs.netlify.com/configure-builds/file-based-configuration/)."
}